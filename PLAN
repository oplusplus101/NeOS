Create a basic 64-bit OS with the following features:
- UEFI bootloader
- A kernel that handles: users, the filesystem, memory, and loading drivers and modules
- A DWM-like GUI
- An NTFS or EXT4 filesystem
- Use the PE32+ format for executables
- A bash-like shell.
Drivers:
A driver handles communication between modules and the hardware.
Modules:
A module is a generic interface between drivers and user-mode programs. Modules can also be used as kernel extensions.

The boot process:
- The bootloader will load the loader located at: \NEOSLDR.SYS in the ESP
- The loader will load the kernel at: C:/system/neoskernel.sys
- The kernel will load the files: C:/system/drivers.cfg, and C:/system/modules.cfg. These files say which drivers/modules to load
- Once the drivers/modules are loaded, the kernel will run the file C:/system/autoexec.sh

Paths:
- The seperator can either be '/' or '\'
- The current directory is '.', and the higher directory is '..'
- Storage devices use the following format: '(A-Z):'
- The main drive will default to 'C:'
